extends base_layout

block main-body-block
  div.main
    div#target-div
    script(type='text/babel').
      class TableLabel extends React.Component {
        constructor(props) {
          super(props);
        }
        render() {
          return (
            <tr className='content-row-label'>
              <th className='content-row-check-label'></th>
              <th className='content-row-index-label'>序号</th>
              <th className='content-row-title-label'>标题</th>
              <th className='content-row-category-label'>类别</th>
              <th className='content-row-label-label'>标签</th>
              <th className='content-row-status-label'>状态</th>
              <th className='content-row-pageview-label'>阅读次数</th>
              <th className='content-row-operation-label'>操作</th>
            </tr>
          );
        }
      }

      class ArticleRow extends React.Component {
        constructor(props) {
          super(props);
          this.id = this.props.article.id;
          this.state = {
            top: this.props.article.top,
            state: this.props.article.state
          };
          this.article_state_label = {
            on: '上线',
            off: '下线',
            check: '待核查'
          };
          this.article_operation = {
            on: <ul className='article-operation-ul'><li><a href='#'>下线</a></li><li><a href='#'>核查</a></li></ul>,
            off: <ul className='article-operation-ul'><li><a href='#'>上线</a></li><li><a href='#'>核查</a></li></ul>,
            check: <ul className='article-operation-ul'><li><a href='#'>上线</a></li><li><a href='#'>删除</a></li></ul>
          }
        }
        render() {
          const article = this.props.article;
          const url = '/articles/view/' + article.id;
          const topStatus = this.state.top == 0 ? {} : {color: '#EF5350'};
          const articleState = this.article_state_label[this.state.state];
          const operation = this.article_operation[this.state.state];
          return (
            <tr className='content-row-data'>
              <td className='content-row-checkbox-data'><input type='checkbox' /></td>
              <td className='content-row-index-data'>{this.props.index + 1}</td>
              <td className='content-row-title-data' style={topStatus}><a href={url}>{article.title}</a></td>
              <td className='content-row-category-data'>{article.category}</td>
              <td className='content-row-label-data'>{article.label}</td>
              <td className='content-row-status-data'>{articleState}</td>
              <td className='content-row-pageview-data'>{article.pageview}</td>
              <td className='content-row-operation-data'>{operation}</td>
            </tr>
          );
        }
      }

      class ArticleTable extends React.Component {
        constructor(props) {
          super(props);
        }
        render() {
          const articleRows = this.props.articleDatas.map((article, index, arr) => {
            return (
              <ArticleRow key = {index} index = {index} article = {article} />
            );
          });
          return (
            <table className='content-table'>
              <thead>
                <TableLabel />
              </thead>
              <tbody>
                { articleRows }
              </tbody>
              <tfoot>
              </tfoot>
            </table>
          );
        }
      };
      function addData(data) {
        ReactDOM.render(
          <ArticleTable articleDatas = {data} />,
          document.getElementById('target-div')
         );
      }

      /**
       * 以后再修改下面的函数
       * 权当学习
       */
      function urlParamsEncode(obj) {
        var param = '';
        for (key in obj) {
          param += (encodeURIComponent(key) + "=" + encodeURIComponent(obj[key]) + '&');
        }
        return param.substring(0, param.length - 1);
      }
      function fetch(url, {
          data = {}, 
          type = 'get', 
          dataType = 'text', 
          success = function(){}, 
          error = function(){}, 
          complete = function(){}}) {
        var xhr = new XMLHttpRequest();
        if (xhr == null) return;
        var params = urlParamsEncode(data);
        if (type == 'get') {
          if (!url.endsWith('?')) url += '?';
          url += params;
        }
        xhr.open(type, url);
        xhr.onreadystatechange = function () {
          if (xhr.readyState == 4) {
            complete();
            if (xhr.status == 200) {
              switch (dataType) {
                case 'json':
                  success(JSON.parse(xhr.responseText));
                  break;
                case 'xml':
                  success(xhr.responseXML);
                  break;
                case 'text':
                default:
                  success(xhr.responseText);
                  break;
              }
            } else {
              // 此处没有参数
              error();
            }
          }
        };
        if (type == 'post') {
          xhr.send(params)
        } else {
          xhr.send();
        }
      }
      fetch('/admin/datas/articles/get', {
        type: 'get', 
        dataType: 'json', 
        success: function(dt) {
          addData(dt.data);
        }
      });