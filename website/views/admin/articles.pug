extends base_layout

block main-body-block
  div.main
    div#target-div
      div#table-div
    script(type='text/babel').
      class FilterInput extends React.Component {
        constructor(props) {
          super(props);
          this.handleChange = this.handleChange.bind(this);
        }
        handleChange(e) {
          if (e.which == 13) {
            var title = this.props.title;
            var value = e.target.value;
            this.props.change(title, value);
          }
        }
        render() {
          return (
            <div className = 'table-filter-item'>
              <label className = 'table-filter-item-label'>{this.props.label}</label>
              <input className = 'table-filter-item-input' onKeyDown = {this.handleChange} />
            </div>
          );
        }
      }
      class FilterSelect extends React.Component {
        constructor(props) {
          super(props);
          this.handleChange = this.handleChange.bind(this);
        }
        handleChange(e) {
          var title = this.props.title;
          var value = e.target.value;
          this.props.change(title, value);
        }
        render() {
          const options = this.props.options.map((opt) => (
            <option value={opt.value}>{opt.title}</option>
          ));
          return (
            <div className = 'table-filter-item'>
              <label className = 'table-filter-item-label'>{this.props.label}</label>
              <select className = 'table-filter-item-select' onChange = {this.handleChange} >
                {options}
              </select>
            </div>
          );
        }
      }
      class TableLabel extends React.Component {
        constructor(props) {
          super(props);
        }
        render() {
          return (
            <tr className='content-row-label'>
              <th className='content-row-check-label'></th>
              <th className='content-row-index-label'>序号</th>
              <th className='content-row-title-label'>标题</th>
              <th className='content-row-category-label'>类别</th>
              <th className='content-row-label-label'>标签</th>
              <th className='content-row-status-label'>状态</th>
              <th className='content-row-pageview-label'>阅读次数</th>
              <th className='content-row-operation-label'>操作</th>
            </tr>
          );
        }
      }
      class ArticleRow extends React.Component {
        constructor(props) {
          super(props);
          this.state = this.props.article;
          this.article_state_label = {
            on: '已上线',
            off: '已下线',
            check: '待核查'
          };
          this.handleStateClick = this.handleStateClick.bind(this);
          this.article_operation = {
            on: <ul className='article-operation-ul'><li data-type='off' onClick = {this.handleStateClick}>下线</li><li data-type='check' onClick = {this.handleStateClick}>核查</li></ul>,
            off: <ul className='article-operation-ul'><li data-type='on' onClick = {this.handleStateClick}>上线</li><li data-type='check' onClick = {this.handleStateClick}>核查</li></ul>,
            check: <ul className='article-operation-ul'><li data-type='on' onClick = {this.handleStateClick}>上线</li><li data-type='check' onClick = {this.handleStateClick}>核查</li><li data-type='del' onClick = {this.handleStateClick}>删除</li></ul>
          }
        }
        handleStateClick(e) {
          var type = e.target.getAttribute('data-type');
          var id = this.state.id;
          var that = this;
          if (type == 'on' || type == 'off') {
            fetch('/admin/datas/articles/modify',
              {
                data: {id: id, state: type},
                type: 'get',
                dataType: 'json',
                success: function(dt) {
                  that.setState(dt.data);
                },
                error: function() {
                  console.log(error);
                }
              }
            );
          } else if (type == 'del') {
            alert(del);
          } else if (type == 'check') {
            location.href = `/admin/articles/modify?id=${id}`;
          }
        }
        render() {
          const url = '/articles/view/' + this.state.id;
          const topStatus = this.state.top == 0 ? {} : {color: '#EF5350'};
          const articleState = this.article_state_label[this.state.state];
          const operation = this.article_operation[this.state.state];
          return (
            <tr className='content-row-data'>
              <td className='content-row-checkbox-data'><input type='checkbox' /></td>
              <td className='content-row-index-data' onClick = {this.handleIndexClick}>{this.props.index + 1}</td>
              <td className='content-row-title-data' style={topStatus}><a href={url}>{this.state.title}</a></td>
              <td className='content-row-category-data'>{this.state.category}</td>
              <td className='content-row-label-data'>{this.state.label}</td>
              <td className='content-row-status-data'>{articleState}</td>
              <td className='content-row-pageview-data'>{this.state.pageview}</td>
              <td className='content-row-operation-data'>{operation}</td>
            </tr>
          );
        }
      }
      class ArticleTable extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            articleDatas: this.props.articleDatas
          };
        }
        render() {
          const articleRows = this.state.articleDatas.map((article, index, arr) => {
            return (
              <ArticleRow key = {index} index = {index} article = {article} />
            );
          });
          return (
            <table className='content-table'>
              <thead>
                <TableLabel />
              </thead>
              <tbody>
                { articleRows }
              </tbody>
              <tfoot>
              </tfoot>
            </table>
          );
        }
      };
      class TableNavLinkLi extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            page: this.props.page,
            title: this.props.title,
            current: this.props.current
          }
          this.handleClick = this.handleClick.bind(this);
        }
        handleClick() {
          this.props.click(this.state.page);
        }
        render() {
          var classes = 'table-nav-ul-li';
          if (this.state.current == this.state.page) classes += ' table-nav-ul-li-current';
          return (
            <li className = {classes} onClick = {this.handleClick}>{this.state.title}</li>
          );
        }
      }
      class TableNavLink extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            page: this.props.page,
            total: this.props.total
          }
          this.getRenderData = this.getRenderData.bind(this);
          this.handleClick = this.handleClick.bind(this);
        }
        handleClick(pg) {
          this.props.pagechange(pg);
        }
        getRenderData() {
          const page = this.state.page;
          const total = this.state.total;
          var start = page < 5 ? 0 : page - 5;
          var len;
          if (start + 10 <= total) {
            len = 10;
          } else if (total - 10 > 0) {
            start = total - 10;
            len = 10;
          } else {
            start = 0;
            len = total;
          }
          var lis = [];
          if (start != 0) lis.push(<TableNavLinkLi page = {start - 1} current = {page} title='上一页' click = {this.handleClick} />);
          for (let i = 1; i <= len; i++)
            lis.push(<TableNavLinkLi page = {start + i - 1} current = {page} title= {start + i} click = {this.handleClick} />);
          if (start + len < total) lis.push(<TableNavLinkLi page = {start + len} current = {page} title = '下一页' click = {this.handleClick} />);
          return lis;
        }
        render() {
          const lis = this.getRenderData();
          console.log('render nav link');
          return (
            <ul id = 'table-nav-ul'>
              {lis}
            </ul>
          );
        }
      }
      class ArticleLayout extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            data: this.props.data,
            current: this.props.current,
            total: this.props.total
          }
          this.handlePageChange = this.handlePageChange.bind(this);
          this.handleFilterChange = this.handleFilterChange.bind(this);
          this.fetchSuccess = this.fetchSuccess.bind(this);
          this.fetchData = this.fetchData.bind(this);
          this.filter = {start : 0};
        }
        fetchSuccess(dt) {
          var that = this;
          if (dt.code == 0) {
            that.setState({
              data: dt.data.data,
              current: dt.data.current,
              total: dt.data.total
            });
          }
        }
        fetchData() {
          var that = this;
          fetch('/admin/datas/articles/get', {
            type: 'get',
            data: that.filter,
            dataType: 'json',
            success: that.fetchSuccess
          });
        }
        handlePageChange(i) {
          this.filter.start = i;
          this.fetchData();
        }
        handleFilterChange(label, value) {
          if (this.filter[label] == value) return;
          this.filter[label] = value;
          this.filter.start = 0;
          this.fetchData();
        }
        render() {
          /**
           * 可能有更好的更新方法
           * 以后再看看能不能修改😊 
           * 因为我感觉这个没有重用，而是重新渲染了
           */
          const ky = new Date().getTime();
          const stateOptions = [
            {value: '-1', title: '全部'},
            {value: 'on', title: '已上线'},
            {value: 'off', title: '已下线'},
            {value: 'check', title: '待核查'}
          ];
          const opeOptions = [
            {value: '-1', title: '--选择操作--'}
          ];
          return (
            <div>
              <div className = 'table-filter-bar table-filter-bar-top'>
                <FilterSelect title = 'state' label = '状态' options = {stateOptions} change = {this.handleFilterChange} />
                <FilterInput title = 'category' label = '类别' change = {this.handleFilterChange} />
                <FilterInput title = 'label' label = '标签' change = {this.handleFilterChange} />
              </div>
              <ArticleTable key = {ky} articleDatas = {this.state.data} />;
              <div className = 'table-filter-bar table-filter-bar-bottom'>
                <FilterSelect options = {opeOptions} />
              </div>
              <TableNavLink key = {ky + 1000} page = {this.state.current} total = {this.state.total} pagechange = {this.handlePageChange} />
            </div>
          );
        }
      }
      /**
       * 以后再修改下面的函数
       * 权当学习
       */
      function urlParamsEncode(obj) {
        var param = '';
        for (let key in obj) {
          param += (encodeURIComponent(key) + "=" + encodeURIComponent(obj[key]) + '&');
        }
        return param.substring(0, param.length - 1);
      }
      function fetch(url, {
          data = {}, 
          type = 'get', 
          dataType = 'text', 
          success = function(){}, 
          error = function(){}, 
          complete = function(){}}) {
        var xhr = new XMLHttpRequest();
        if (xhr == null) return;
        var params = urlParamsEncode(data);
        if (type == 'get') {
          if (!url.endsWith('?')) url += '?';
          url += params;
        }
        xhr.open(type, url);
        xhr.onreadystatechange = function () {
          if (xhr.readyState == 4) {
            complete();
            if (xhr.status == 200) {
              switch (dataType) {
                case 'json':
                  success(JSON.parse(xhr.responseText));
                  break;
                case 'xml':
                  success(xhr.responseXML);
                  break;
                case 'text':
                default:
                  success(xhr.responseText);
                  break;
              }
            } else {
              // 此处没有参数
              error();
            }
          }
        };
        if (type == 'post') {
          xhr.send(params)
        } else {
          xhr.send();
        }
      }
      function getData(start = 0) {
        fetch('/admin/datas/articles/get', {
          type: 'get', 
          data: {start: start},
          dataType: 'json', 
          success: function(dt) {
            ReactDOM.render(
              <ArticleLayout data = {dt.data.data} current = {dt.data.current} total = {dt.data.total} />,
              document.getElementById('table-div')
            );
          }
        });
      }
      getData();